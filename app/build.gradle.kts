/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    java
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
     // --- Storage ---
    implementation("org.rocksdb:rocksdbjni:9.6.1")      // Bundles native libs

    // --- Networking ---
    implementation("io.netty:netty-all:4.1.115.Final")

    // --- Crypto ---
    implementation("org.bouncycastle:bcprov-jdk18on:1.78.1")

    // --- Observability ---
    implementation("io.micrometer:micrometer-core:1.13.3")
    implementation("io.micrometer:micrometer-registry-prometheus:1.13.3")

    // Logging facade + backend
    implementation("org.slf4j:slf4j-api:2.0.13")
    runtimeOnly("ch.qos.logback:logback-classic:1.5.6")

    // RocksDB JNI binding (native lib bundled for major OSes)
    implementation("org.rocksdb:rocksdbjni:9.6.1")

    // --- Testing ---
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.3")
    testImplementation("org.testcontainers:junit-jupiter:1.20.1")
    implementation(libs.guava)
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.12.1")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.test { useJUnitPlatform() }

application {
    // Define the main class for the application.
    mainClass.set("io.blockchain.core.Main")
}
